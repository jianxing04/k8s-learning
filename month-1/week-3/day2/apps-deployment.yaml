# apps-deployment.yaml

# ----------------- App1 ----------------- #
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app1-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app1
  template:
    metadata:
      labels:
        app: app1
    spec:
      containers:
      - name: app1-container
        # 使用一个可以回显请求信息的镜像，方便我们验证
        image: gcr.io/google-samples/echoserver:1.10
        ports:
        - containerPort: 8080
        env:
        - name: "NODE_NAME"
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: "POD_NAME"
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: "POD_NAMESPACE"
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: "POD_IP"
          valueFrom:
            fieldRef:
              fieldPath: status.podIP

---
apiVersion: v1
kind: Service
metadata:
  name: app1-service
spec:
  selector:
    app: app1
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080

# ----------------- App2 ----------------- #
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app2-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app2
  template:
    metadata:
      labels:
        app: app2
    spec:
      containers:
      # 使用同一个镜像，但它会回显自己的 Pod 名称，所以我们可以区分
      - name: app2-container
        image: gcr.io/google-samples/echoserver:1.10
        ports:
        - containerPort: 8080
        env:
        - name: "NODE_NAME"
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: "POD_NAME"
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: "POD_NAMESPACE"
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: "POD_IP"
          valueFrom:
            fieldRef:
              fieldPath: status.podIP

---
apiVersion: v1
kind: Service
metadata:
  name: app2-service
spec:
  selector:
    app: app2
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080